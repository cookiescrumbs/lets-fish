{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/list-posts/list-posts.component.ts","./src/app/list-posts/list-posts.component.html","./src/app/live-photo/live-photo.component.ts","./src/app/live-photo/live-photo.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/services/map.service.ts","./src/app/services/post.service.ts","./src/app/trips/trips.component.ts","./src/app/trips/trips.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TripsComponent } from './trips/trips.component';\n\n\nconst routes: Routes = [\n    { path: 'trip/:tripId', component: TripsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PostService } from './services/post.service';\nimport { MapService } from './services/map.service';\n\nimport { Post, Marker, Start} from './types';\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListPostsComponent } from './list-posts/list-posts.component';\nimport { LivePhotoComponent } from './live-photo/live-photo.component';\nimport { MapComponent } from './map/map.component';\nimport { TripsComponent } from './trips/trips.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListPostsComponent,\n    LivePhotoComponent,\n    MapComponent,\n    TripsComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    GoogleMapsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { PostService } from '../services/post.service';\n\nimport { Post, Start } from '../types';\n\n@Component({\n    selector: 'app-list-posts',\n    templateUrl: './list-posts.component.html',\n    styleUrls: ['./list-posts.component.scss']\n})\nexport class ListPostsComponent {\n    @Input() posts: Array<Post>;\n    @Input() start: Start;\n\n    constructor(public postService: PostService ) { }\n\n}\n","<div class=\"list-container\">\n    <div class=\"post\">\n        <app-live-photo\n            [media]=start.media\n        ></app-live-photo>\n        <div class=\"content\">\n            <div class=\"header\">\n                <div>\n                    <h3>{{start.title}}</h3>\n                </div>\n                <div>\n                    <span class=\"date-time\">{{  start.timeStamp | date: 'mediumDate' }}</span>\n                </div>\n            </div>\n            <div class=\"main\" [innerHTML]=\"start.content\">\n            </div>\n        </div>\n    </div>\n    <div class=\"post\" *ngFor=\"let post of posts\">\n        <app-live-photo\n            (inView)=\"postService.setCurrentPost($event, post)\"\n            [media]=post.media\n        ></app-live-photo>\n        <div class=\"content\">\n            <div class=\"header\">\n                <div>\n                    <span class=\"badge\">{{post.position}}</span>\n                </div>\n                <div>\n                    <span class=\"date-time\">{{ post.timeStamp | date: 'shortTime' }}</span>\n                </div>\n            </div>\n            <div class=\"main\" [innerHTML]=\"post.content\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, Input, HostListener, ElementRef, EventEmitter, Output, AfterViewInit } from '@angular/core';\nimport * as LivePhotosKit from 'livephotoskit';\nimport { Media } from '../types';\n\n@Component({\n    selector: 'app-live-photo',\n    templateUrl: './live-photo.component.html',\n    styleUrls: ['./live-photo.component.scss']\n})\nexport class LivePhotoComponent implements AfterViewInit {\n    @Input() media: Media;\n\n    @Output()\n    inView: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public livePlayer: any;\n    public id: string;\n\n    private _player: any;\n\n    constructor(\n        private el: ElementRef\n    ) {\n        this.id = this._generateId();\n    }\n\n    ngAfterViewInit() {\n        this._createPlayer();\n        this.onWindowScroll();\n    }\n\n\n    @HostListener('window:scroll', [])\n    onWindowScroll(): void {\n        const position = this.el.nativeElement.getBoundingClientRect();\n        // detecting if element is fully visible ... is this post the current post?\n        if (position.top >= 0 && position.bottom <= window.innerHeight) {\n            this.inView.emit(true);\n        }\n    }\n\n    private _createPlayer() {\n        const el = document.getElementById(this.id);\n        const liveButtonClass = 'lpk-badge';\n        const hasVideo = (this._videoSrc() ? true : false);\n\n        this._player = LivePhotosKit.augmentElementAsPlayer(el);\n        this._player.photoSrc = this._imageSrc();\n        this._player.videoSrc = this._videoSrc();\n        this._removeLiveButton(el, liveButtonClass, hasVideo);\n    }\n\n    private _generateId(): string {\n        return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n    }\n\n    private _videoSrc(): string | null {\n        return this.media.videoSrc ? this.media.videoSrc : null;\n    }\n\n    private _imageSrc(): string | null {\n        return this.media.imageSrc ? this.media.imageSrc : null;\n    }\n\n    private _removeLiveButton(el: any, className: string, hasVideo: boolean): void {\n        if (!hasVideo) {\n            el.getElementsByClassName(className)[0].style.display = 'none';\n        }\n\n    }\n\n}\n","<div\n    id=\"{{id}}\"\n>\n<div>\n","import { Component, Input, SimpleChanges, OnChanges, ViewChild } from '@angular/core';\nimport { GoogleMap } from '@angular/google-maps';\n\nimport { Post, LatLng, Marker } from '../types';\n\n\n@Component({\n    selector: 'app-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnChanges {\n    @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\n\n    @Input() markers: Array<Marker>;\n    @Input() currentPost: Post;\n\n    public options: google.maps.MapOptions = {\n        mapTypeId: 'satellite',\n        zoomControl: false,\n        scrollwheel: false,\n        disableDoubleClickZoom: false,\n        streetViewControl: false,\n        mapTypeControl: false,\n        fullscreenControl: false\n    };\n    public zoom = 15;\n    public center: google.maps.LatLngLiteral;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        console.log('ngOnChanges marker', this.markers);\n        if (changes.currentPost && this.currentPost) {\n            this.map.panTo(this._setCentreToCurrentPost());\n            // this.center = this._setCentreToCurrentPost();\n\n        }\n    }\n\n\n    private _setCentreToCurrentPost(): LatLng {\n        return this.currentPost.location;\n    }\n\n}\n","<google-map\n    width=\"100%\"\n    height=\"100%\"\n    [center]=\"center\"\n    [zoom]=\"zoom\"\n    [options]=\"options\"\n    >\n    <map-marker\n        *ngFor=\"let marker of markers\"\n        [position]=\"marker.location\"\n        [options]=\"marker.markerOptions\"\n    >\n    </map-marker>\n</google-map>\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Post, Marker } from '../types';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MapService {\n\n    private _markers = [];\n    public _markers$: BehaviorSubject<Marker[]>;\n\n    constructor() {\n        this._markers$ = new BehaviorSubject(this._markers);\n    }\n\n    public initMarkers(posts: Post[]): void {\n        this._markers = posts.map((post: Post, index: number) => {\n            return this._markerFromPost(post, index);\n        });\n        this._markers$.next(this._markers);\n    }\n\n    public get markers(): BehaviorSubject<Marker[]> {\n        return this._markers$;\n    }\n\n    public currentMarker(id: string) {\n        this._markers = this._markers.map((marker: Marker) => {\n            const animated = {\n                ...marker.markerOptions,\n                animation: google.maps.Animation.BOUNCE\n            };\n\n            const notAnimated = {\n                ...marker.markerOptions,\n                animation: null\n            };\n\n            if (marker.id === id) {\n                return {\n                    ...marker,\n                    markerOptions: animated\n                };\n            }\n            return {\n                ...marker,\n                markerOptions: notAnimated\n            };\n        });\n        this._markers$.next(this._markers);\n    }\n\n    private _markerFromPost(post: Post, index: number): Marker {\n        return {\n            id: post.id,\n            location: post.location,\n            markerOptions: {\n                draggable: false,\n                icon: {\n                    url: `https://chart.googleapis.com/chart?chst=d_map_spin&chld=1|0|fed136|13|_|${index + 1}`\n                }\n            }\n        };\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Post, Start} from '../types';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MapService } from './map.service';\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PostService {\n\n    private _currentPost: Post;\n    private _currentPostId: string;\n\n    private _currentPost$: BehaviorSubject<Post>;\n    private postsUrl = 'http://localhost:5000';\n\n    constructor(\n        private http: HttpClient,\n        private mapService: MapService\n    ) {}\n\n    public getPosts(tripId: string): Observable<Post[]> {\n        return this.http.get<Post[]>(`${this.postsUrl}/trips/${tripId}/posts.json`)\n        .pipe(\n            // map(responseData => {\n            //     const keys = Object.keys(responseData);\n            //     return keys.map((key): Post => {\n            //         const post: Post = responseData[key];\n            //         return {\n            //             ...post,\n            //             id: key\n            //         };\n            //     });\n            // }),\n            map(posts => this._addPosition(posts)),\n            tap(posts => this.mapService.initMarkers(posts)),\n            tap((posts) => {\n                    this._currentPostId = posts[0].id;\n                    this._currentPost = posts[0];\n                    this._currentPost$ = new BehaviorSubject<Post>(this._currentPost);\n                    this.mapService.currentMarker(posts[0].id);\n            })\n        );\n    }\n\n    public getStart(tripId: string): Observable<Start>{\n        return this.http.get<Start>(`${this.postsUrl}/trips/${tripId}.json`);\n    }\n\n    public setCurrentPost(inView: boolean, post: Post): void {\n        if (inView && this._currentPostId !== post.id) {\n            this._currentPostId = post.id;\n            this._currentPost = post;\n            this._currentPost$.next(this._currentPost);\n            this.mapService.currentMarker(this._currentPostId);\n        }\n    }\n\n    private _addPosition(posts: Post[]): Post[] {\n        return posts.map((post: Post , index: number) => {\n            return {\n                ...post,\n                position: index + 1\n            };\n        });\n    }\n\n    public getCurrentPost(): Observable<Post> {\n        return this._currentPost$.asObservable();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PostService } from '../services/post.service';\nimport { MapService } from '../services/map.service';\n\nimport { Post, Marker, Start } from '../types';\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-trips',\n    templateUrl: './trips.component.html',\n    styleUrls: ['./trips.component.scss']\n})\nexport class TripsComponent implements OnInit {\n\n\n    public posts$: Observable<Post[]>;\n    public start$: Observable<Start>;\n    public markers$: Observable<Marker[]>;\n    public currentPost$: Observable<Post>;\n\n    private _tripId: string;\n\n    constructor(\n        public postService: PostService,\n        public mapService: MapService,\n        private readonly route: ActivatedRoute\n    ) { }\n\n    public ngOnInit() {\n        this.route.paramMap.subscribe(params => {\n            const tripId = params.get('tripId');\n            if (tripId) {\n                this._tripId = tripId;\n                this._getPosts();\n                this._getStart();\n                this._getMarkers();\n            }\n        });\n    }\n\n    private _getPosts(): void {\n        this.posts$ = this.postService.getPosts(this._tripId)\n            .pipe(\n                tap(() => {\n                    this.currentPost$ = this.postService.getCurrentPost();\n                })\n            );\n    }\n\n    private _getMarkers(): void {\n        this.markers$ = this.mapService.markers;\n    }\n\n    private _getStart(): void {\n        this.start$ = this.postService.getStart(this._tripId);\n    }\n\n    public onClickBack(): void {\n        document.location.href = '/trips/';\n    }\n\n}\n","<div id=\"nav\">\n    <button class=\"badge back\" (click)=\"onClickBack()\">&#60;</button>\n</div>\n<div *ngIf=\"(start$ | async ) as start\">\n    <app-list-posts [posts]=\"posts$ | async\" [start]=\"start\"></app-list-posts>\n</div>\n<div id=\"map\" >\n    <app-map [markers]=\"markers$ | async\" [currentPost]=\"currentPost$ | async\"></app-map>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}